{"version":3,"file":"static/js/752.4a2dc834.chunk.js","mappings":"4MACA,EAA8B,2B,SCoB9B,MAlBA,SAAoB,GAA0E,IAAtEA,EAAW,EAAXA,YACtB,OAAoB,OAAhBA,QAAwCC,IAAhBD,GACnB,8CAIP,oBAASE,UAAWC,EAAkB,SACnCH,EAAYI,KAAI,gBAAGC,EAAE,EAAFA,GAAIC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAAO,OACrC,gCACE,uBAAID,KACJ,uBAAIC,MAFQF,EAGJ,KAKlB,ECKA,MAlBA,WACE,OAAmCG,EAAAA,EAAAA,UAAiC,MAAK,eAAlER,EAAW,KAAES,EAAW,KACdJ,GAAOK,EAAAA,EAAAA,MAAhBC,QAWR,OAVAC,EAAAA,EAAAA,YAAU,gBACGX,IAAPI,IACFQ,EAAAA,EAAAA,IAAW,CAAER,GAAAA,IAAMS,MAAK,SAACC,QAERd,IADAc,GAEbN,EAFaM,EAEMC,KAAKC,QAE5B,IAAGC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAQ,GAEhD,GAAG,KAED,SAAC,EAAW,CAACtB,YAAaA,GAE9B,C,qLCnBMuB,EAAU,mCACHC,EAAW,yCAAG,8FAC8C,OADrCC,EAAU,EAAVA,WACb,mDAAkD,kBAEnCC,EAAAA,EAAAA,IAFf,mDAEuC,CACxDC,OAAQ,CACNC,QAASL,EACTM,eAAe,EACfC,KAAML,KAER,OANuB,OAAnBT,EAAmB,yBAOlBA,GAAI,gCAEPM,EAAU,gBACV,gBAAiBS,QAAOT,EAAU,KAAMA,SAC5CF,QAAQD,MAAMG,GAAQ,yDAEzB,gBAhBuB,sCAkBXU,EAAe,yCAAG,kGACiC,OADxBP,EAAU,EAAVA,WAAW,EAAD,EAAEQ,MAAAA,OAAK,MAAG,GAAE,EACzC,4CAA2C,kBAE1BP,EAAAA,EAAAA,IAFjB,4CAEuC,CACtDC,OAAQ,CACNC,QAASL,EACTM,eAAe,EACfC,KAAML,EACNQ,MAAAA,KAEF,OAPuB,OAAnBjB,EAAmB,yBAQlBA,GAAI,gCAEPM,EAAU,gBACV,gBAAiBS,QAAOT,EAAU,KAAMA,SAC5CF,QAAQD,MAAMG,GAAQ,yDAEzB,gBAjB2B,sCAmBfY,EAAgB,yCAAG,gGAEiC,OAFxB7B,EAAE,EAAFA,GAAE,SAEjC8B,EAAY,6CAAyC9B,GAAE,SAC3BqB,EAAAA,EAAAA,IAAUS,EAAc,CACxDR,OAAQ,CACNC,QAASL,EACTM,eAAe,KAEjB,OALuB,OAAnBb,EAAmB,yBAMlBA,GAAI,gCAEPM,EAAU,gBACV,gBAAiBS,QAAOT,EAAU,KAAMA,SAC5CF,QAAQD,MACNG,EACA,oEACD,yDAEJ,gBAlB4B,sCAoBhBc,EAAO,yCAAG,gGAE0C,OAFjC/B,EAAE,EAAFA,GAAE,SAExB8B,EAAY,6CAAyC9B,EAAE,qBACnCqB,EAAAA,EAAAA,IAAUS,EAAc,CAChDR,OAAQ,CACNC,QAASL,EACTM,eAAe,KAEjB,OALe,OAAXb,EAAW,yBAMVA,GAAI,gCAEPM,EAAU,gBACV,gBAAiBS,QAAOT,EAAU,KAAMA,SAC5CF,QAAQD,MACNG,EACA,oEACD,yDAEJ,gBAlBmB,sCAoBPT,EAAU,yCAAG,gGAEuC,OAF9BR,EAAE,EAAFA,GAAE,SAE3B8B,EAAY,6CAAyC9B,EAAE,qBAChCqB,EAAAA,EAAAA,IAAUS,EAAc,CACnDR,OAAQ,CACNC,QAASL,EACTM,eAAe,KAEjB,OALkB,OAAdb,EAAc,yBAMbA,GAAI,gCAEPM,EAAU,gBACV,gBAAiBS,QAAOT,EAAU,KAAMA,SAC5CF,QAAQD,MACNG,EACA,oEACD,yDAEJ,gBAlBsB,qC","sources":["webpack://goit-react-hw-05/./src/components/reviewsInfo/style.module.css?d607","components/reviewsInfo/index.tsx","pages/Reviews/index.tsx","utilities/getData.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castSection\":\"style_castSection__adftp\",\"castCard\":\"style_castCard__vsdMR\",\"castImg\":\"style_castImg__tHGrh\"};","import React from 'react'\r\nimport { ReviewsResult } from '../../utilities/interfaces'\r\nimport style from './style.module.css'\r\nfunction ReviewsInfo ({ reviewsInfo }: { reviewsInfo: ReviewsResult[] | null }): JSX.Element {\r\n  if (reviewsInfo === null || reviewsInfo === undefined) {\r\n    return <div>Cast not found.</div>\r\n  }\r\n\r\n  return (\r\n    <section className={style.castSection}>\r\n      {reviewsInfo.map(({ id, author, content }) => (\r\n        <article key={id}>\r\n          <p>{author}</p>\r\n          <q>{content}</q>\r\n        </article>\r\n      ))}\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ReviewsInfo\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getReviews } from '../../utilities/getData'\r\nimport { useParams } from 'react-router-dom'\r\nimport ReviewsInfo from '../../components/reviewsInfo'\r\nimport { ReviewsResult } from '../../utilities/interfaces'\r\n\r\nfunction Reviews (): JSX.Element {\r\n  const [reviewsInfo, setCastInfo] = useState<null | ReviewsResult[]>(null)\r\n  const { movieId: id } = useParams()\r\n  useEffect(() => {\r\n    if (id !== undefined) {\r\n      getReviews({ id }).then((response) => {\r\n        const result = response\r\n        if (result !== undefined) {\r\n          setCastInfo(result.data.results)\r\n        }\r\n      }).catch(error => console.log(error.message))\r\n    }\r\n  }, [])\r\n  return (\r\n    <ReviewsInfo reviewsInfo={reviewsInfo}/>\r\n  )\r\n}\r\n\r\nexport default Reviews\r\n","import axios from 'axios'\r\nimport { IPopularFilms, ISelectedFilm, ICast, IReviews } from './interfaces'\r\n\r\nconst API_KEY = 'a8c13239d5351cd341496e4bdbeed27b'\r\nexport const getTrending = async ({ pageNumber }: { pageNumber: number }): Promise<IPopularFilms | undefined> => {\r\n  const trendingLink = 'https://api.themoviedb.org/3/trending/movie/week'\r\n  try {\r\n    const data: IPopularFilms = await axios.get(trendingLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false,\r\n        page: pageNumber\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(message)\r\n  }\r\n}\r\n\r\nexport const getSearchMovies = async ({ pageNumber, query = '' }: { pageNumber: number, query: string }): Promise<IPopularFilms | undefined> => {\r\n  const searchLink = 'https://api.themoviedb.org/3/search/movie'\r\n  try {\r\n    const data: IPopularFilms = await axios.get(searchLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false,\r\n        page: pageNumber,\r\n        query\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(message)\r\n  }\r\n}\r\n\r\nexport const getSelectedMovie = async ({ id }: { id: string }): Promise<ISelectedFilm | undefined> => {\r\n  try {\r\n    const findFilmLink = `https://api.themoviedb.org/3/movie/${id}`\r\n    const data: ISelectedFilm = await axios.get(findFilmLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(\r\n      message,\r\n      '; You should pass object with \"id\" element as function parameter'\r\n    )\r\n  }\r\n}\r\n\r\nexport const getCast = async ({ id }: { id: string }): Promise<ICast | undefined> => {\r\n  try {\r\n    const findFilmLink = `https://api.themoviedb.org/3/movie/${id}/credits`\r\n    const data: ICast = await axios.get(findFilmLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(\r\n      message,\r\n      '; You should pass object with \"id\" element as function parameter'\r\n    )\r\n  }\r\n}\r\n\r\nexport const getReviews = async ({ id }: { id: string }): Promise<IReviews | undefined> => {\r\n  try {\r\n    const findFilmLink = `https://api.themoviedb.org/3/movie/${id}/reviews`\r\n    const data: IReviews = await axios.get(findFilmLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(\r\n      message,\r\n      '; You should pass object with \"id\" element as function parameter'\r\n    )\r\n  }\r\n}\r\n"],"names":["reviewsInfo","undefined","className","style","map","id","author","content","useState","setCastInfo","useParams","movieId","useEffect","getReviews","then","response","data","results","catch","error","console","log","message","API_KEY","getTrending","pageNumber","axios","params","api_key","include_adult","page","Error","getSearchMovies","query","getSelectedMovie","findFilmLink","getCast"],"sourceRoot":""}