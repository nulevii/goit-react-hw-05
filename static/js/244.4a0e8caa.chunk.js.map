{"version":3,"file":"static/js/244.4a0e8caa.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05/./src/components/SelectedMovie/style.module.css?9de0","components/SelectedMovie/index.tsx","pages/MovieDetails/index.tsx","utilities/getData.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieSection\":\"style_movieSection__jHV7U\",\"button\":\"style_button__7kZmM\"};","import React, { useState, useEffect } from 'react'\r\nimport { NavLink, Outlet, useLocation } from 'react-router-dom'\r\nimport { filmData } from '../../utilities/interfaces'\r\nimport styles from './style.module.css'\r\n\r\nfunction SelectedMovie ({ data }: { data: filmData | null }): JSX.Element {\r\n  const { state: locationState } = useLocation()\r\n  let [prevLocation, setPrevlocation] = useState<null | string>(null)\r\n  useEffect(() => {\r\n    console.log(locationState)\r\n    setPrevlocation(locationState.pathname)\r\n  }, [])\r\n  prevLocation ??= '/'\r\n\r\n  if (data === null) {\r\n    return <div>Oops, there is no such film</div>\r\n  }\r\n\r\n  const {\r\n    backdrop_path: backdropPath,\r\n    original_title: originalTitle,\r\n    tagline,\r\n    budget,\r\n    genres,\r\n    overview,\r\n    release_date: releaseDate,\r\n    vote_average: voteAverage\r\n  } = data\r\n\r\n  const joinedGenres = genres.map(genre => genre.name).join(', ')\r\n\r\n  return (\r\n    <section className={styles.movieSection}>\r\n      <NavLink className={styles.button} state={locationState.searchValue} to={prevLocation}>Go back</NavLink>\r\n      <h1>{originalTitle}</h1>\r\n      <p>{tagline}</p>\r\n      <img src={`https://image.tmdb.org/t/p/w500/${backdropPath}`}\r\n        alt={originalTitle} />\r\n      <p>{joinedGenres}</p>\r\n      <p>Budget: $ {budget}</p>\r\n      <p>Released: {releaseDate}</p>\r\n      <p>Average vote: {voteAverage}</p>\r\n      <p>{overview}</p>\r\n      <NavLink className={styles.button} to='cast'>Cast</NavLink>\r\n      <NavLink className={styles.button} to='reviews'>Reviews</NavLink>\r\n      <hr />\r\n      <Outlet />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SelectedMovie\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getSelectedMovie } from '../../utilities/getData'\r\nimport { useParams } from 'react-router-dom'\r\nimport SelectedMovie from '../../components/SelectedMovie'\r\nimport { filmData } from '../../utilities/interfaces'\r\n\r\nfunction MovieDetails (): JSX.Element {\r\n  const [filmInfo, setFilmInfo] = useState<null | filmData>(null)\r\n  const { movieId: id } = useParams()\r\n  useEffect(() => {\r\n    if (id !== undefined) {\r\n      getSelectedMovie({ id }).then((response) => {\r\n        const result = response\r\n        if (result !== undefined) setFilmInfo(result.data)\r\n      }).catch(error => console.log(error.message))\r\n    }\r\n  }, [])\r\n  return (\r\n    <SelectedMovie data={filmInfo} />\r\n  )\r\n}\r\n\r\nexport default MovieDetails\r\n","import axios from 'axios'\r\nimport { IPopularFilms, ISelectedFilm, ICast, IReviews } from './interfaces'\r\n\r\nconst API_KEY = 'a8c13239d5351cd341496e4bdbeed27b'\r\nexport const getTrending = async ({ pageNumber }: { pageNumber: number }): Promise<IPopularFilms | undefined> => {\r\n  const trendingLink = 'https://api.themoviedb.org/3/trending/movie/week'\r\n  try {\r\n    const data: IPopularFilms = await axios.get(trendingLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false,\r\n        page: pageNumber\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(message)\r\n  }\r\n}\r\n\r\nexport const getSearchMovies = async ({ pageNumber, query = '' }: { pageNumber: number, query: string }): Promise<IPopularFilms | undefined> => {\r\n  const searchLink = 'https://api.themoviedb.org/3/search/movie'\r\n  try {\r\n    const data: IPopularFilms = await axios.get(searchLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false,\r\n        page: pageNumber,\r\n        query\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(message)\r\n  }\r\n}\r\n\r\nexport const getSelectedMovie = async ({ id }: { id: string }): Promise<ISelectedFilm | undefined> => {\r\n  try {\r\n    const findFilmLink = `https://api.themoviedb.org/3/movie/${id}`\r\n    const data: ISelectedFilm = await axios.get(findFilmLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(\r\n      message,\r\n      '; You should pass object with \"id\" element as function parameter'\r\n    )\r\n  }\r\n}\r\n\r\nexport const getCast = async ({ id }: { id: string }): Promise<ICast | undefined> => {\r\n  try {\r\n    const findFilmLink = `https://api.themoviedb.org/3/movie/${id}/credits`\r\n    const data: ICast = await axios.get(findFilmLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(\r\n      message,\r\n      '; You should pass object with \"id\" element as function parameter'\r\n    )\r\n  }\r\n}\r\n\r\nexport const getReviews = async ({ id }: { id: string }): Promise<IReviews | undefined> => {\r\n  try {\r\n    const findFilmLink = `https://api.themoviedb.org/3/movie/${id}/reviews`\r\n    const data: IReviews = await axios.get(findFilmLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(\r\n      message,\r\n      '; You should pass object with \"id\" element as function parameter'\r\n    )\r\n  }\r\n}\r\n"],"names":["data","locationState","useLocation","state","useState","prevLocation","setPrevlocation","useEffect","console","log","pathname","backdropPath","backdrop_path","originalTitle","original_title","tagline","budget","genres","overview","releaseDate","release_date","voteAverage","vote_average","joinedGenres","map","genre","name","join","className","styles","searchValue","to","src","alt","filmInfo","setFilmInfo","id","useParams","movieId","undefined","getSelectedMovie","then","response","catch","error","message","API_KEY","getTrending","pageNumber","axios","params","api_key","include_adult","page","Error","getSearchMovies","query","findFilmLink","getCast","getReviews"],"sourceRoot":""}