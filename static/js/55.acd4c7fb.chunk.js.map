{"version":3,"file":"static/js/55.acd4c7fb.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05/./src/components/CastInfo/style.module.css?3814","components/CastInfo/index.tsx","pages/Cast/index.tsx","utilities/getData.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castSection\":\"style_castSection__8UH99\",\"castCard\":\"style_castCard__vb52V\",\"castImg\":\"style_castImg__13d6L\"};","import React from 'react'\r\nimport { Cast } from '../../utilities/interfaces'\r\nimport style from './style.module.css'\r\nfunction CastInfo ({ cast }: { cast: Cast[] | null }): JSX.Element {\r\n  if (cast === null || cast === undefined) {\r\n    return <div>Cast not found.</div>\r\n  }\r\n\r\n  return (\r\n    <section className={style.castSection}>\r\n      {cast.map(({ id, name, profile_path: profilePath }) => {\r\n        const profileImg = (profilePath === null)\r\n          ? 'https://assets.mycast.io/actor_images/actor-an-unknown-actor-465215_large.jpg?1656098263'\r\n          : `https://image.tmdb.org/t/p/w500/${profilePath as string}`\r\n        return (<article className={style.castCard} key={id}>\r\n          <img\r\n            className={style.castImg}\r\n            src={ profileImg}\r\n            alt={name}\r\n          />\r\n          <h4>{name}</h4>\r\n        </article>)\r\n      })}\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CastInfo\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getCast } from '../../utilities/getData'\r\nimport { useParams } from 'react-router-dom'\r\nimport CastInfo from '../../components/CastInfo'\r\nimport { Cast as TCast } from '../../utilities/interfaces'\r\n\r\nfunction Cast (): JSX.Element {\r\n  const [castInfo, setCastInfo] = useState<null | TCast[]>(null)\r\n  const { movieId: id } = useParams()\r\n  useEffect(() => {\r\n    if (id !== undefined) {\r\n      getCast({ id }).then((response) => {\r\n        const result = response\r\n\r\n        if (result !== undefined) {\r\n          setCastInfo(result.data.cast)\r\n        }\r\n      }).catch(error => console.log(error.message))\r\n    }\r\n  }, [])\r\n  return (\r\n    <CastInfo cast={castInfo}/>\r\n  )\r\n}\r\n\r\nexport default Cast\r\n","import axios from 'axios'\r\nimport { IPopularFilms, ISelectedFilm, ICast, IReviews } from './interfaces'\r\n\r\nconst API_KEY = 'a8c13239d5351cd341496e4bdbeed27b'\r\nexport const getTrending = async ({ pageNumber }: { pageNumber: number }): Promise<IPopularFilms | undefined> => {\r\n  const trendingLink = 'https://api.themoviedb.org/3/trending/movie/week'\r\n  try {\r\n    const data: IPopularFilms = await axios.get(trendingLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false,\r\n        page: pageNumber\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(message)\r\n  }\r\n}\r\n\r\nexport const getSearchMovies = async ({ pageNumber, query = '' }: { pageNumber: number, query: string }): Promise<IPopularFilms | undefined> => {\r\n  const searchLink = 'https://api.themoviedb.org/3/search/movie'\r\n  try {\r\n    const data: IPopularFilms = await axios.get(searchLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false,\r\n        page: pageNumber,\r\n        query\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(message)\r\n  }\r\n}\r\n\r\nexport const getSelectedMovie = async ({ id }: { id: string }): Promise<ISelectedFilm | undefined> => {\r\n  try {\r\n    const findFilmLink = `https://api.themoviedb.org/3/movie/${id}`\r\n    const data: ISelectedFilm = await axios.get(findFilmLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(\r\n      message,\r\n      '; You should pass object with \"id\" element as function parameter'\r\n    )\r\n  }\r\n}\r\n\r\nexport const getCast = async ({ id }: { id: string }): Promise<ICast | undefined> => {\r\n  try {\r\n    const findFilmLink = `https://api.themoviedb.org/3/movie/${id}/credits`\r\n    const data: ICast = await axios.get(findFilmLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(\r\n      message,\r\n      '; You should pass object with \"id\" element as function parameter'\r\n    )\r\n  }\r\n}\r\n\r\nexport const getReviews = async ({ id }: { id: string }): Promise<IReviews | undefined> => {\r\n  try {\r\n    const findFilmLink = `https://api.themoviedb.org/3/movie/${id}/reviews`\r\n    const data: IReviews = await axios.get(findFilmLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(\r\n      message,\r\n      '; You should pass object with \"id\" element as function parameter'\r\n    )\r\n  }\r\n}\r\n"],"names":["cast","undefined","className","style","map","id","name","profilePath","profile_path","profileImg","src","alt","useState","castInfo","setCastInfo","useParams","movieId","useEffect","getCast","then","response","data","catch","error","console","log","message","API_KEY","getTrending","pageNumber","axios","params","api_key","include_adult","page","Error","getSearchMovies","query","getSelectedMovie","findFilmLink","getReviews"],"sourceRoot":""}