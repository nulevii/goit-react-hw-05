{"version":3,"file":"static/js/439.625ab69f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05/./src/components/Movies/style.module.css?888e","components/Movies/Movies.tsx","webpack://goit-react-hw-05/./src/pages/SearchPage/styles.module.css?54c9","pages/SearchPage/index.tsx","utilities/getData.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmsSection\":\"style_filmsSection__8ljeo\",\"film\":\"style_film__vH09q\",\"filmImg\":\"style_filmImg__DQnxy\",\"filmTitle\":\"style_filmTitle__VS6+h\"};","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { Result } from '../../utilities/interfaces'\r\n\r\nimport styles from './style.module.css'\r\nfunction Movies ({ filmsArr }: { filmsArr: Result[] }): JSX.Element {\r\n  const location = useLocation()\r\n  return (\r\n    <section className={styles.filmsSection}>\r\n      {filmsArr.map(({ original_title: originalTitle, poster_path: posterPath, id }) => (\r\n      <Link className={styles.film} to={`/movies/${id}` } state={{ from: location }} key={id}>\r\n        <img\r\n          className={styles.filmImg}\r\n          src={`https://image.tmdb.org/t/p/w500/${posterPath}`}\r\n          alt={originalTitle}\r\n        />\r\n        <h4 className={styles.filmTitle}>{originalTitle}</h4>\r\n      </Link>\r\n      ))}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Movies\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"styles_searchForm__OVCzj\",\"gallery\":\"styles_gallery__fuLPC\",\"load-more\":\"styles_load-more__hIpFw\",\"hidden\":\"styles_hidden__P8V+3\",\"wrapper\":\"styles_wrapper__N4XEC\",\"button\":\"styles_button__FI4og\",\"modalWindow\":\"styles_modalWindow__djNXd\",\"button-65\":\"styles_button-65__7sbIE\"};","import React, { FormEventHandler, useEffect, useRef, useState } from 'react'\r\nimport style from './styles.module.css'\r\nimport { getSearchMovies } from '../../utilities/getData'\r\nimport { Result } from '../../utilities/interfaces'\r\nimport Movies from '../../components/Movies/Movies'\r\nimport { useSearchParams } from 'react-router-dom'\r\nfunction SearchPage (): JSX.Element {\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  const prevSearchParams = searchParams.get('filter')\r\n  useEffect(() => {\r\n    if (prevSearchParams !== null) {\r\n      getSearchMovies({ pageNumber: 1, query: prevSearchParams }).then((response) => {\r\n        const result = response\r\n        if (result !== undefined) {\r\n          setFilmsArr(result.data.results)\r\n        }\r\n      }).catch(error => console.log(error.message))\r\n    }\r\n  })\r\n\r\n  const [filmsArr, setFilmsArr] = useState<Result[]>([])\r\n  const searchValue = useRef<null | HTMLInputElement>(null)\r\n  const onUpdateState: FormEventHandler<HTMLFormElement> = (e): void => {\r\n    e.preventDefault()\r\n    if (searchValue.current !== null) {\r\n      setSearchParams({ filter: searchValue.current.value })\r\n      getSearchMovies({ pageNumber: 1, query: searchValue.current.value }).then((response) => {\r\n        const result = response\r\n        if (result !== undefined) {\r\n          setFilmsArr(result.data.results)\r\n        }\r\n      }).catch(error => console.log(error.message))\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <header className={style.searchForm}>\r\n        <form onSubmit={onUpdateState} className=\"form\">\r\n          <button type=\"submit\">&#128269; </button>\r\n          <input\r\n            ref={searchValue}\r\n            className=\"input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search films\"\r\n          />\r\n        </form>\r\n      </header>\r\n      <Movies filmsArr={filmsArr} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchPage\r\n","import axios from 'axios'\r\nimport { IPopularFilms, ISelectedFilm, ICast, IReviews } from './interfaces'\r\n\r\nconst API_KEY = 'a8c13239d5351cd341496e4bdbeed27b'\r\nexport const getTrending = async ({ pageNumber }: { pageNumber: number }): Promise<IPopularFilms | undefined> => {\r\n  const trendingLink = 'https://api.themoviedb.org/3/trending/movie/week'\r\n  try {\r\n    const data: IPopularFilms = await axios.get(trendingLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false,\r\n        page: pageNumber\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(message)\r\n  }\r\n}\r\n\r\nexport const getSearchMovies = async ({ pageNumber, query = '' }: { pageNumber: number, query: string }): Promise<IPopularFilms | undefined> => {\r\n  const searchLink = 'https://api.themoviedb.org/3/search/movie'\r\n  try {\r\n    const data: IPopularFilms = await axios.get(searchLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false,\r\n        page: pageNumber,\r\n        query\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(message)\r\n  }\r\n}\r\n\r\nexport const getSelectedMovie = async ({ id }: { id: string }): Promise<ISelectedFilm | undefined> => {\r\n  try {\r\n    const findFilmLink = `https://api.themoviedb.org/3/movie/${id}`\r\n    const data: ISelectedFilm = await axios.get(findFilmLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(\r\n      message,\r\n      '; You should pass object with \"id\" element as function parameter'\r\n    )\r\n  }\r\n}\r\n\r\nexport const getCast = async ({ id }: { id: string }): Promise<ICast | undefined> => {\r\n  try {\r\n    const findFilmLink = `https://api.themoviedb.org/3/movie/${id}/credits`\r\n    const data: ICast = await axios.get(findFilmLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(\r\n      message,\r\n      '; You should pass object with \"id\" element as function parameter'\r\n    )\r\n  }\r\n}\r\n\r\nexport const getReviews = async ({ id }: { id: string }): Promise<IReviews | undefined> => {\r\n  try {\r\n    const findFilmLink = `https://api.themoviedb.org/3/movie/${id}/reviews`\r\n    const data: IReviews = await axios.get(findFilmLink, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        include_adult: false\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    let message = 'Unknown Error'\r\n    if (error instanceof Error) message = error.message\r\n    console.error(\r\n      message,\r\n      '; You should pass object with \"id\" element as function parameter'\r\n    )\r\n  }\r\n}\r\n"],"names":["filmsArr","location","useLocation","className","styles","map","originalTitle","original_title","posterPath","poster_path","id","to","state","from","src","alt","useSearchParams","searchParams","setSearchParams","prevSearchParams","get","useEffect","getSearchMovies","pageNumber","query","then","response","undefined","setFilmsArr","data","results","catch","error","console","log","message","useState","searchValue","useRef","style","onSubmit","e","preventDefault","current","filter","value","type","ref","autoComplete","autoFocus","placeholder","Movies","API_KEY","getTrending","axios","params","api_key","include_adult","page","Error","getSelectedMovie","findFilmLink","getCast","getReviews"],"sourceRoot":""}